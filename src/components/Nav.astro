---
const { exampleName, exampleEntries } = Astro.props;
---

<div
  class="position-fixed d-flex flex-column h-100 start-0 w-inherit p-inherit"
>
  <a
    href="/"
    class="d-flex align-items-center text-decoration-none text-reset mt-3 ms-3"
  >
    <img src="/logo.gif" class="h-10" />
    <img src="/logo.png" class="h-10" />
    <span class="ms-2 fs-4 font-dot">Flameの法則</span>
  </a>

  <div class="mt-3">
    <input
      type="search"
      class="form-control form-control-sm"
      placeholder="Search"
    />
  </div>

  <div class="list-group flex-fill overflow-auto mt-1 rounded-0 small">
    {
      exampleEntries
        .sort((a, b) => a.data.id - b.data.id)
        .map((entry) => (
          <a
            href={`/examples/${entry.slug}#${entry.slug}`}
            class={`list-group-item list-group-item-action border-0 ${
              entry.slug === exampleName ? 'bg-secondary-subtle' : ''
            }`}
            id={entry.slug}
          >
            {entry.data.title}
          </a>
        ))
    }
    {
      [...new Array(15)].map((_, i) => (
        <a
          href="/"
          class="list-group-item list-group-item-action border-0"
          id={`item${i}`}
        >
          dummy
        </a>
      ))
    }
  </div>

  <div class="bg-secondary-subtle py-5 mt-1">ad</div>
</div>

<style lang="scss">
  a {
    img[src$='logo.gif'] {
      display: none;
    }

    &:hover {
      img[src$='logo.gif'] {
        display: inline;
      }

      img[src$='logo.png'] {
        display: none;
      }
    }
  }
</style>

<script>
  const search = document.querySelector('input[type=search]');
  const items = document.querySelectorAll('.list-group a');

  search.addEventListener('input', (e) => {
    const value = e.target.value.toLowerCase();
    items.forEach((item) => {
      const text = item.textContent.toLowerCase().trim();
      if (text && text.includes(value)) {
        item.style.display = 'block';
      } else {
        item.style.display = 'none';
      }
    });
  });
</script>
